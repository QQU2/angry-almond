/*
 * EMPLOYEES 테이블을 조회 할 때 JOB_ID, DEPAERTMENT_ID 가 ID가 아닌
 * NAME 으로 조회 될 수 있도록 JOIN 을 활용한다.
 * (서브쿼리도 사용 가능하기 때문에 서브쿼리로도 만들어 본다.)
 */
SELECT * FROM EMPLOYEES;
SELECT * FROM JOBS;
SELECT * FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

/*
 * DEPARTMENTS 테이블과 LOCATIONS 테이블을 사용하여 각 부서가 어느 지역에 위치하고
 * 있는지 JOIN 을 활용하여 조회한다.
 * (서브쿼리로도 사용 가능하기 때문에 서브 쿼리로도 만들어 본다.)
 */
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;

SELECT * FROM DEPARTMENTS D 
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID;

SELECT * FROM DEPARTMENTS D 
JOIN LOCATIONS L USING(LOCATION_ID);

/*
 * LOCATIONS 테이블과 COUNTRIES, REGIONS 테이블을 사용하여 각 지역이
 * 어느 나라 그리고 어떤 대륙에 위치하는지 JOIN 을 활용하여 조회 한다.
 */
SELECT * FROM LOCATIONS;
SELECT * FROM COUNTRIES;
SELECT * FROM REGIONS;

SELECT * FROM LOCATIONS L 
JOIN COUNTRIES C USING(COUNTRY_ID)
JOIN REGIONS R ON C.REGION_ID = R.REGION_ID ;

SELECT R.REGION_NAME
     , C.COUNTRY_NAME
     , L.CITY || ' ' || DECODE(L.STATE_PROVINCE, NULL, '', CONCAT(L.STATE_PROVINCE, ' ')) || L.STREET_ADDRESS AS ADDRESS
     , L.POSTAL_CODE
  FROM LOCATIONS L
  JOIN COUNTRIES C
    ON L.COUNTRY_ID = C.COUNTRY_ID
  JOIN REGIONS R
    ON C.REGION_ID = R.REGION_ID
 ORDER BY 1, 2;
/*
 * 대륙별 직원 수를 파악하기 위한 조회 쿼리를 만든다.
 */

SELECT * FROM EMPLOYEES;
SELECT * FROM REGIONS;

SELECT R.REGION_NAME 대륙, COUNT(*) AS 사원수
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
JOIN LOCATIONS L ON D.LOCATION_ID =L.LOCATION_ID 
JOIN COUNTRIES C ON L.COUNTRY_ID  = C.COUNTRY_ID  
JOIN REGIONS R ON C.REGION_ID = R.REGION_ID 
GROUP BY R.REGION_NAME ;

/*
 * 나라별 직원 수를 파악하기 위한 조회 쿼리를 만든다.
 */
SELECT C.COUNTRY_NAME 나라, COUNT(*) AS 사원수
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
JOIN LOCATIONS L ON D.LOCATION_ID =L.LOCATION_ID 
JOIN COUNTRIES C ON L.COUNTRY_ID  = C.COUNTRY_ID  
JOIN REGIONS R ON C.REGION_ID = R.REGION_ID 
GROUP BY C.COUNTRY_NAME ;

/* 
 * 대륙별, 나라별 직원 수를 파악하기 위한 집계 쿼리를 만든다.
 */
SELECT DECODE (GROUPING(R.REGION_NAME), 1, '총계', R.REGION_NAME) 대륙
	 , DECODE(GROUPING(C.COUNTRY_NAME), 1, DECODE(GROUPING(R.REGION_NAME), 1, ' ', '소계'), C ) 나라
	 , COUNT(*) AS 사원수
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
JOIN LOCATIONS L ON D.LOCATION_ID =L.LOCATION_ID 
JOIN COUNTRIES C ON L.COUNTRY_ID  = C.COUNTRY_ID  
JOIN REGIONS R ON C.REGION_ID = R.REGION_ID 
GROUP BY ROLLUP(R.REGION_NAME, C.COUNTRY_NAME) ;

--   , TRUNC(MAX(SYSDATE-HIRE_DATE), 1)||'일 '|| FIRST_NAME AS 고참사원
--	 , TRUNC(MIN(SYSDATE-HIRE_DATE), 1)||'일 '|| FIRST_NAME AS 막내사원
/*부서별 최고참, 막내 사원 구하기.
 */

WITH 부서T AS(SELECT D.DEPARTMENT_NAME AS 부서
	 				  , MIN(HIRE_DATE) AS 막내사원
	 				  , MAX(HIRE_DATE) AS 고참사원
				  FROM DEPARTMENTS D
				  JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
				 GROUP BY D.DEPARTMENT_NAME)
SELECT 부서
	 , 막내사원
	 , MIN(HIRE_DATE) AS 막내사원입사일
	 , 고참사원
	 , MAX(HIRE_DATE) AS 고참사원입사일
FROM 부서T T
JOIN EMPLOYEES E ON T.막내사원 = E.HIRE_DATE 
JOIN EMPLOYEES E ON T.고참사원 = E.HIRE_DATE;

SELECT E1.EMPLOYEE_ID
	 , E1.DEPARTMENT_ID 
	 , E1.HIRE_DATE
	 , CASE WHEN E1.HIRE_DATE = E2.MX THEN '고참'
	 		WHEN E1.HIRE_DATE = E2.MN THEN '막내'
	   END AS 구분
FROM EMPLOYEES E1
JOIN(SELECT DEPARTMENT_ID 
	 		, MAX(HIRE_DATE) AS MX
	 		, MIN(HIRE_DATE) AS MN
		FROM EMPLOYEES 
		GROUP BY DEPARTMENT_ID) E2 
ON E1.DEPARTMENT_ID = E2.DEPARTMENT_ID
AND (E1.HIRE_DATE = E2.MX OR E1.HIRE_DATE = E2.MN) 
ORDER BY 2;
SELECT * FROM EMPLOYEES ORDER BY DEPARTMENT_ID ;

/*
 * 국가별 최고액 급여, 최저 급여 구하기(커미션이 있는 경우 커미션 포함)
 */
SELECT * FROM COUNTRIES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
SELECT * FROM REGIONS;

--COLUMN: 사원ID, 사원명, 국가명, 급여, 급여구분(최고급여, 최소급여)
--1 테이블: 국가별 급여액 분류
SELECT E.EMPLOYEE_ID 
	 , FIRST_NAME ||' ' ||LAST_NAME AS NAME 
	 , E.SALARY 
	 , C.COUNTRY_NAME 
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
ORDER BY C.COUNTRY_NAME;


--2 테이블: 국가별 급여액 최고, 최소 분류
SELECT C.COUNTRY_NAME, MAX(E.SALARY) 최고급여액, MIN(E.SALARY) 최소급여액
FROM EMPLOYEES E
	JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
	JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
GROUP BY C.COUNTRY_NAME
ORDER BY 1;

 --국가명, 국가별 최고 급여와 최소 급여, 사원ID, 사원명, 사원 국가
 --1. 먼저 국가명, 국가별 최고 급여, 최소 급여 TABLE을 조회 -> 이미 GROUP 지어놓음
 --2. 1 TABLE과 2 TABLE을 JOIN ON 국가명
SELECT E1.국가명 AS 국가명
	 , E1.NAME AS 이름
	 , E1.SALARY
	 , CASE WHEN E1.SALARY = E2.최고급여액 THEN '최고급여'
	 		WHEN E1.SALARY = E2.최소급여액 THEN '최소급여'
	   END AS 급여 구분
FROM (SELECT E.EMPLOYEE_ID 
			 , E.FIRST_NAME ||' ' ||E.LAST_NAME AS NAME 
			 , E.SALARY AS SALARY
			 , C.COUNTRY_NAME AS 국가명
		FROM EMPLOYEES E
		JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
		JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
		JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
		ORDER BY C.COUNTRY_NAME
	  ) AS E1
JOIN(SELECT C.COUNTRY_NAME AS 국가명, MAX(E.SALARY) 최고급여액, MIN(E.SALARY) 최소급여액
		FROM EMPLOYEES E
			JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
			JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
			JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
		GROUP BY C.COUNTRY_NAME
		ORDER BY 1
	) AS E2 ON E1.국가명 = E2.국가명;

--FROM절의 구문을 WITH로 만들고 JOIN문에서 활용 

SELECT *
FROM EMPLOYEES E1
JOIN(SELECT C.COUNTRY_NAME AS 나라
		   , MAX(E.SALARY) AS 최고급여액
		   , MIN(E.SALARY) AS 최소급여액
	   FROM EMPLOYEES E
	   JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	   JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
	   JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
	  GROUP BY C.COUNTRY_NAME
	) AS E2 
 ON E2.최고급여액 = E1.SALARY OR E2.최소급여액 = E1.SALARY;

SELECT *
FROM EMPLOYEES E1
JOIN(SELECT C.COUNTRY_NAME AS 나라
		  , MAX(E.SALARY*(1 + NVL(E.COMMISSION_PCT,0))) AS 최고급여
		  , MIN(E.SALARY*(1 + NVL(E.COMMISSION_PCT,0))) AS 최저급여
	   FROM EMPLOYEES E
	   JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	   JOIN LOCATIONS L ON D.LOCATION_ID= D.LOCATION_ID
	   JOIN COUNTRIES C ON C.COUNTRY_ID = C.COUNTRY_ID
	  GROUP BY C.COUNTRY_NAME) AS E2
  ON E2.최고급여 = E1.SALARY*(1 + NVL(E.COMMISSION_PCT,0))
  OR E2.최저급여 = E1.SALARY*(1 + NVL(E.COMMISSION_PCT,0));

 
 SELECT E1.EMPLOYEE_ID
     , E1.FIRST_NAME
     , E1.LAST_NAME
     , E2.나라구분
     , CASE WHEN E2.최고급여 = E1.SALARY * (1 + NVL(E1.COMMISSION_PCT, 0)) THEN '최고급여'
            WHEN E2.최저급여 = E1.SALARY * (1 + NVL(E1.COMMISSION_PCT, 0)) THEN '최저급여'
        END AS 구분
     , E1.SALARY * (1 + NVL(E1.COMMISSION_PCT, 0)) AS 급여
  FROM EMPLOYEES E1
  JOIN (SELECT C.COUNTRY_NAME AS 나라구분
             , MAX(E.SALARY * (1 + NVL(E.COMMISSION_PCT, 0))) AS 최고급여
             , MIN(E.SALARY * (1 + NVL(E.COMMISSION_PCT, 0))) AS 최저급여
          FROM EMPLOYEES E
          JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
          JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
          JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
         GROUP BY C.COUNTRY_NAME
       ) E2
    ON E2.최고급여 = E1.SALARY * (1 + NVL(E1.COMMISSION_PCT, 0))
    OR E2.최저급여 = E1.SALARY * (1 + NVL(E1.COMMISSION_PCT, 0))
 ORDER BY 4;